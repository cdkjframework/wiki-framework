<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这里的namespace必须和是对应的mapper.java的地址-->
<mapper namespace="com.cdkj.framework.core.business.mapper.GenerateMapper">

    <resultMap id="dataBaseResultMap" type="com.cdkj.framework.entity.generate.DatabaseEntity">
        <result property="tableSchema" column="table_schema"/>
    </resultMap>

    <resultMap id="tableResultMap" type="com.cdkj.framework.entity.generate.TableEntity">
        <result property="tableName" column="table_name"/>
        <result property="tableComment" column="table_comment"/>
        <result property="tableSchema" column="table_schema"/>
    </resultMap>

    <resultMap id="columnResultMap" type="com.cdkj.framework.entity.generate.TableColumnEntity">
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
        <result property="columnKey" column="column_key"/>
        <result property="dataType" column="data_type"/>
        <result property="characterMaximumLength" column="character_maximum_length"/>
        <result property="columnDefault" column="column_default"/>
        <result property="isNullable" column="is_nullable"/>
        <result property="tableName" column="table_name"/>
        <result property="tableSchema" column="table_schema"/>
    </resultMap>

    <select id="findDatabase" resultMap="dataBaseResultMap">
        SELECT
            database() AS table_schema;
    </select>
    <select id="findDatabaseByMsSql" resultMap="dataBaseResultMap">
        SELECT TOP 1 NAME AS table_schema from sysdatabases
    </select>

    <select id="findDatabaseList" resultMap="dataBaseResultMap">
        SELECT
            table_schema
        FROM
            information_schema.tables
        GROUP BY
            table_schema
    </select>

    <select id="findDatabaseListByMsSql" resultMap="dataBaseResultMap">
        SELECT NAME AS table_schema from sysdatabases
    </select>

    <select id="findDatabaseTableList" resultMap="tableResultMap" parameterType="com.cdkj.framework.entity.generate.TableEntity">
        SELECT
            table_name,
            table_comment,
            table_schema
        FROM
            information_schema.tables
        WHERE
            table_schema = #{tableSchema}
    </select>
    <select id="findDatabaseTableListByMsSql" resultMap="tableResultMap" parameterType="com.cdkj.framework.entity.generate.TableEntity">
        USE ${tableSchema};SELECT NAME AS tableName,'' AS tableComment, ${tableSchema} AS tableSchema FROM sysobjects WHERE xtype = 'u'
    </select>

    <select id="findTableColumnList" resultMap="columnResultMap" parameterType="com.cdkj.framework.entity.generate.TableColumnEntity">
        SELECT
            column_name,
            column_comment,
            column_key,
            data_type,
            character_maximum_length,
            column_default,
            is_nullable,
            table_name,
            table_schema
        FROM
            information_schema.columns
        WHERE
            table_name = #{tableName}
        AND table_schema = #{tableSchema}
    </select>

    <select id="findTableColumnListByMsSql" resultMap="columnResultMap" parameterType="com.cdkj.framework.entity.generate.TableColumnEntity">
        SELECT
            t.name AS table_name,
            c.name AS column_name,
            p.value AS column_comment,
            so.xtype AS column_key,
            sc.is_nullable,
            sc.table_catalog AS table_schema,
            sc.data_type,
            sc.character_maximum_length,
            sc.column_default
        FROM
            sys.tables t
            INNER JOIN sys.columns c ON c.object_id = t.object_id
            LEFT JOIN sys.extended_properties p ON p.major_id = c.object_id
            AND p.minor_id = c.column_id
            LEFT JOIN sysobjects so ON so.parent_obj = c.object_id
            AND so.uid = c.column_id
            LEFT JOIN information_schema.columns sc ON sc.Table_Name = t.name
            AND sc.COLUMN_NAME = c.name
        WHERE
            t.name = #{ tableName }
            AND sc.table_catalog =  #{ tableSchema };
    </select>
</mapper>